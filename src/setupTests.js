HTMLCanvasElement.prototype.getContext = (type) => {
  if (type === '2d') {
    return {
      fillRect: () => { },
      clearRect: () => { },
      getImageData: () => { return { data: [] }; },
      putImageData: () => { },
      createImageData: () => { return []; },
      setTransform: () => { },
      drawImage: () => { },
      save: () => { },
      fillText: () => { },
      restore: () => { },
      beginPath: () => { },
      moveTo: () => { },
      lineTo: () => { },
      closePath: () => { },
      stroke: () => { },
      translate: () => { },
      scale: () => { },
      rotate: () => { },
      arc: () => { },
      fill: () => { },
      measureText: () => { return { width: 0 }; },
      transform: () => { },
      rect: () => { },
      clip: () => { },
      fillStyle: '',
      strokeStyle: '',
    };
  } else if (type === 'webgl' || type === 'experimental-webgl') {
    return {
      getExtension: () => { },
      enable: () => { },
      disable: () => { },
      clearColor: () => { },
      clearDepth: () => { },
      clearStencil: () => { },
      clear: () => { },
      createShader: () => { return {}; },
      shaderSource: () => { },
      compileShader: () => { },
      createProgram: () => { return {}; },
      attachShader: () => { },
      linkProgram: () => { },
      useProgram: () => { },
      getProgramParameter: () => { return true; },
      getShaderParameter: () => { return true; },
      createBuffer: () => { return {}; },
      bindBuffer: () => { },
      bufferData: () => { },
      viewport: () => { },
      drawArrays: () => { },
      drawElements: () => { },
      getUniformLocation: () => { return {}; },
      uniformMatrix4fv: () => { },
      uniform4fv: () => { },
      uniform1i: () => { },
      activeTexture: () => { },
      bindTexture: () => { },
      texParameteri: () => { },
      texImage2D: () => { },
      generateMipmap: () => { },
      createTexture: () => { return {}; },
    };
  }
  return null;
};